import { InjectionToken } from '@angular/core';
export const NGXPS_CONFIG = new InjectionToken('ngxps_config');
const ɵ0 = (t, b, c, d) => {
    // Linear easing
    return c * t / d + b;
};
export const defaultPageScrollConfig = {
    _interval: 10,
    _minScrollDistance: 2,
    _logLevel: 1,
    namespace: 'default',
    verticalScrolling: true,
    duration: 1250,
    scrollOffset: 0,
    advancedInlineOffsetCalculation: false,
    interruptEvents: ['mousedown', 'wheel', 'DOMMouseScroll', 'mousewheel', 'keyup', 'touchmove'],
    interruptKeys: [' ', 'Escape', 'Tab', 'Enter', 'PageUp', 'PageDown', 'Home', 'End', 'ArrowUp', 'ArrowRight', 'ArrowLeft', 'ArrowDown'],
    interruptible: true,
    scrollInView: true,
    easingLogic: ɵ0,
};
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLnByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXBhZ2Utc2Nyb2xsLWNvcmUvc3JjL2xpYi9wcm92aWRlcnMvY29uZmlnLnByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHL0MsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLElBQUksY0FBYyxDQUFtQixjQUFjLENBQUMsQ0FBQztXQWVsRSxDQUFDLENBQVMsRUFBRSxDQUFTLEVBQUUsQ0FBUyxFQUFFLENBQVMsRUFBVSxFQUFFO0lBQ2xFLGdCQUFnQjtJQUNoQixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN2QixDQUFDO0FBaEJILE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFxQjtJQUN2RCxTQUFTLEVBQUUsRUFBRTtJQUNiLGtCQUFrQixFQUFFLENBQUM7SUFDckIsU0FBUyxFQUFFLENBQUM7SUFDWixTQUFTLEVBQUUsU0FBUztJQUNwQixpQkFBaUIsRUFBRSxJQUFJO0lBQ3ZCLFFBQVEsRUFBRSxJQUFJO0lBQ2QsWUFBWSxFQUFFLENBQUM7SUFDZiwrQkFBK0IsRUFBRSxLQUFLO0lBQ3RDLGVBQWUsRUFBRSxDQUFDLFdBQVcsRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsWUFBWSxFQUFFLE9BQU8sRUFBRSxXQUFXLENBQUM7SUFDN0YsYUFBYSxFQUFFLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxXQUFXLENBQUM7SUFDdEksYUFBYSxFQUFFLElBQUk7SUFDbkIsWUFBWSxFQUFFLElBQUk7SUFDbEIsV0FBVyxJQUdWO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQYWdlU2Nyb2xsQ29uZmlnIH0gZnJvbSAnLi4vdHlwZXMvcGFnZS1zY3JvbGwuY29uZmlnJztcblxuZXhwb3J0IGNvbnN0IE5HWFBTX0NPTkZJRyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxQYWdlU2Nyb2xsQ29uZmlnPignbmd4cHNfY29uZmlnJyk7XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0UGFnZVNjcm9sbENvbmZpZzogUGFnZVNjcm9sbENvbmZpZyA9IHtcbiAgX2ludGVydmFsOiAxMCxcbiAgX21pblNjcm9sbERpc3RhbmNlOiAyLFxuICBfbG9nTGV2ZWw6IDEsXG4gIG5hbWVzcGFjZTogJ2RlZmF1bHQnLFxuICB2ZXJ0aWNhbFNjcm9sbGluZzogdHJ1ZSxcbiAgZHVyYXRpb246IDEyNTAsXG4gIHNjcm9sbE9mZnNldDogMCxcbiAgYWR2YW5jZWRJbmxpbmVPZmZzZXRDYWxjdWxhdGlvbjogZmFsc2UsXG4gIGludGVycnVwdEV2ZW50czogWydtb3VzZWRvd24nLCAnd2hlZWwnLCAnRE9NTW91c2VTY3JvbGwnLCAnbW91c2V3aGVlbCcsICdrZXl1cCcsICd0b3VjaG1vdmUnXSxcbiAgaW50ZXJydXB0S2V5czogWycgJywgJ0VzY2FwZScsICdUYWInLCAnRW50ZXInLCAnUGFnZVVwJywgJ1BhZ2VEb3duJywgJ0hvbWUnLCAnRW5kJywgJ0Fycm93VXAnLCAnQXJyb3dSaWdodCcsICdBcnJvd0xlZnQnLCAnQXJyb3dEb3duJ10sXG4gIGludGVycnVwdGlibGU6IHRydWUsXG4gIHNjcm9sbEluVmlldzogdHJ1ZSxcbiAgZWFzaW5nTG9naWM6ICh0OiBudW1iZXIsIGI6IG51bWJlciwgYzogbnVtYmVyLCBkOiBudW1iZXIpOiBudW1iZXIgPT4ge1xuICAgIC8vIExpbmVhciBlYXNpbmdcbiAgICByZXR1cm4gYyAqIHQgLyBkICsgYjtcbiAgfSxcbn07XG4iXX0=