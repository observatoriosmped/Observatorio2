import { __decorate, __param } from "tslib";
import { Inject, Injectable } from '@angular/core';
import { swalProviderToken } from './di';
import * as ɵngcc0 from '@angular/core';
var SweetAlert2LoaderService = /** @class */ (function () {
    // Using any because Angular metadata generator does not understand a pure TS type here
    function SweetAlert2LoaderService(swalProvider) {
        this.swalProvider = swalProvider;
    }
    Object.defineProperty(SweetAlert2LoaderService.prototype, "swal", {
        get: function () {
            if (!this.swalPromiseCache) {
                this.preloadSweetAlertLibrary();
            }
            return this.swalPromiseCache;
        },
        enumerable: true,
        configurable: true
    });
    SweetAlert2LoaderService.prototype.preloadSweetAlertLibrary = function () {
        if (this.swalPromiseCache)
            return;
        var libPromise = isLoader(this.swalProvider)
            ? this.swalProvider()
            : Promise.resolve(this.swalProvider);
        this.swalPromiseCache = libPromise.then(function (value) { return isDefaultExport(value) ? value : value.default; });
        function isLoader(value) {
            return typeof value === 'function' && value.version === undefined;
        }
        function isDefaultExport(value) {
            return typeof value === 'function';
        }
    };
    SweetAlert2LoaderService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [swalProviderToken,] }] }
    ]; };
    SweetAlert2LoaderService = __decorate([ __param(0, Inject(swalProviderToken))
    ], SweetAlert2LoaderService);
SweetAlert2LoaderService.ɵfac = function SweetAlert2LoaderService_Factory(t) { return new (t || SweetAlert2LoaderService)(ɵngcc0.ɵɵinject(swalProviderToken)); };
SweetAlert2LoaderService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: SweetAlert2LoaderService, factory: function (t) { return SweetAlert2LoaderService.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SweetAlert2LoaderService, [{
        type: Injectable
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [swalProviderToken]
            }] }]; }, null); })();
    return SweetAlert2LoaderService;
}());
export { SweetAlert2LoaderService };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dlZXRhbGVydDItbG9hZGVyLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIm5nOi9Ac3dlZXRhbGVydDIvbmd4LXN3ZWV0YWxlcnQyL2xpYi9zd2VldGFsZXJ0Mi1sb2FkZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbkQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sTUFBTSxDQUFDOztBQVN6QztJQUtJLHVGQUF1RjtJQUN2RixrQ0FBOEMsWUFBaUI7UUFDM0QsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7SUFDckMsQ0FBQztJQUVELHNCQUFXLDBDQUFJO2FBQWY7WUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFO2dCQUN4QixJQUFJLENBQUMsd0JBQXdCLEVBQUUsQ0FBQzthQUNuQztZQUVELE9BQU8sSUFBSSxDQUFDLGdCQUFpQixDQUFDO1FBQ2xDLENBQUM7OztPQUFBO0lBRU0sMkRBQXdCLEdBQS9CO1FBQ0ksSUFBSSxJQUFJLENBQUMsZ0JBQWdCO1lBQUUsT0FBTztRQUVsQyxJQUFNLFVBQVUsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQztZQUMxQyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNyQixDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFFekMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBOUMsQ0FBOEMsQ0FBQyxDQUFDO1FBRWpHLFNBQVMsUUFBUSxDQUFDLEtBQW1CO1lBQ2pDLE9BQU8sT0FBTyxLQUFLLEtBQUssVUFBVSxJQUFLLEtBQWEsQ0FBQyxPQUFPLEtBQUssU0FBUyxDQUFDO1FBQy9FLENBQUM7UUFFRCxTQUFTLGVBQWUsQ0FBQyxLQUFpQjtZQUN0QyxPQUFPLE9BQU8sS0FBSyxLQUFLLFVBQVUsQ0FBQztRQUN2QyxDQUFDO0lBQ0wsQ0FBQzs7Z0RBNUJtQixNQUFNLFNBQUMsaUJBQWlCOztJQU5uQyx3QkFBd0IsZUFDekIsU0FGWCxVQUFVLEVBQUUsckJBQ0wsQ0FNZ0IsV0FBQSxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQTtPQU5wQyx3QkFBd0IsQ0FtQ3BDOzs7Ozs7OztrQ0FDRDtJQURBLCtCQUFDO0NBQUEsQUFuQ0QsSUFtQ0M7U0FuQ1ksd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0LCBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgU3dhbERlZmF1bHQsICogYXMgU3dhbCBmcm9tICdzd2VldGFsZXJ0Mic7XG5pbXBvcnQgeyBzd2FsUHJvdmlkZXJUb2tlbiB9IGZyb20gJy4vZGknO1xuXG5leHBvcnQgdHlwZSBTd2FsTW9kdWxlID0gdHlwZW9mIFN3YWxEZWZhdWx0IHwgdHlwZW9mIFN3YWw7XG5cbmV4cG9ydCB0eXBlIFN3YWxQcm92aWRlciA9IFN3YWxNb2R1bGVMb2FkZXIgfCBTd2FsTW9kdWxlO1xuXG5leHBvcnQgdHlwZSBTd2FsTW9kdWxlTG9hZGVyID0gKCkgPT4gUHJvbWlzZTxTd2FsTW9kdWxlPjtcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFN3ZWV0QWxlcnQyTG9hZGVyU2VydmljZSB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBzd2FsUHJvdmlkZXI6IFN3YWxQcm92aWRlcjtcblxuICAgIHByaXZhdGUgc3dhbFByb21pc2VDYWNoZT86IFByb21pc2U8dHlwZW9mIFN3YWxEZWZhdWx0PjtcblxuICAgIC8vIFVzaW5nIGFueSBiZWNhdXNlIEFuZ3VsYXIgbWV0YWRhdGEgZ2VuZXJhdG9yIGRvZXMgbm90IHVuZGVyc3RhbmQgYSBwdXJlIFRTIHR5cGUgaGVyZVxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihASW5qZWN0KHN3YWxQcm92aWRlclRva2VuKSBzd2FsUHJvdmlkZXI6IGFueSkge1xuICAgICAgICB0aGlzLnN3YWxQcm92aWRlciA9IHN3YWxQcm92aWRlcjtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHN3YWwoKTogUHJvbWlzZTx0eXBlb2YgU3dhbERlZmF1bHQ+IHtcbiAgICAgICAgaWYgKCF0aGlzLnN3YWxQcm9taXNlQ2FjaGUpIHtcbiAgICAgICAgICAgIHRoaXMucHJlbG9hZFN3ZWV0QWxlcnRMaWJyYXJ5KCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy5zd2FsUHJvbWlzZUNhY2hlITtcbiAgICB9XG5cbiAgICBwdWJsaWMgcHJlbG9hZFN3ZWV0QWxlcnRMaWJyYXJ5KCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5zd2FsUHJvbWlzZUNhY2hlKSByZXR1cm47XG5cbiAgICAgICAgY29uc3QgbGliUHJvbWlzZSA9IGlzTG9hZGVyKHRoaXMuc3dhbFByb3ZpZGVyKVxuICAgICAgICAgICAgPyB0aGlzLnN3YWxQcm92aWRlcigpXG4gICAgICAgICAgICA6IFByb21pc2UucmVzb2x2ZSh0aGlzLnN3YWxQcm92aWRlcik7XG5cbiAgICAgICAgdGhpcy5zd2FsUHJvbWlzZUNhY2hlID0gbGliUHJvbWlzZS50aGVuKHZhbHVlID0+IGlzRGVmYXVsdEV4cG9ydCh2YWx1ZSkgPyB2YWx1ZSA6IHZhbHVlLmRlZmF1bHQpO1xuXG4gICAgICAgIGZ1bmN0aW9uIGlzTG9hZGVyKHZhbHVlOiBTd2FsUHJvdmlkZXIpOiB2YWx1ZSBpcyBTd2FsTW9kdWxlTG9hZGVyIHtcbiAgICAgICAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicgJiYgKHZhbHVlIGFzIGFueSkudmVyc2lvbiA9PT0gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gaXNEZWZhdWx0RXhwb3J0KHZhbHVlOiBTd2FsTW9kdWxlKTogdmFsdWUgaXMgdHlwZW9mIFN3YWxEZWZhdWx0IHtcbiAgICAgICAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbic7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=