import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
/**
 * @internal
 * Holds a consumer's Angular template and displays it on a Sweet Alert.
 * See SwalPortalDirective for info about the covered feature.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function SwalPortalComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
var SwalPortalComponent = /** @class */ (function () {
    function SwalPortalComponent() {
        this.template = null;
    }
    __decorate([
        Input()
    ], SwalPortalComponent.prototype, "template", void 0);
SwalPortalComponent.ɵfac = function SwalPortalComponent_Factory(t) { return new (t || SwalPortalComponent)(); };
SwalPortalComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SwalPortalComponent, selectors: [["swal-portal"]], inputs: { template: "template" }, decls: 1, vars: 1, consts: [[4, "ngTemplateOutlet"]], template: function SwalPortalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SwalPortalComponent_ng_container_0_Template, 1, 0, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template);
    } }, directives: [ɵngcc1.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SwalPortalComponent, [{
        type: Component,
        args: [{
                selector: 'swal-portal',
                template: '<ng-container *ngTemplateOutlet="template"></ng-container>',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { template: [{
            type: Input
        }] }); })();
    return SwalPortalComponent;
}());
export { SwalPortalComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dhbC1wb3J0YWwuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZzovQHN3ZWV0YWxlcnQyL25neC1zd2VldGFsZXJ0Mi9saWIvc3dhbC1wb3J0YWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBZSxNQUFNLGVBQWUsQ0FBQztBQUV2Rjs7OztHQUlHOzs7Ozs7O0FBTUg7SUFBQTtRQUNvQixhQUFRLEdBQTRCLElBQUksQ0FBQztJQUM3RCxDQUFDO0lBRFk7UUFBUixLQUFLLEVBQUU7eURBQWlELENBQzdEO0lBRmEsbUJBQW1CLHdCQUwvQixTQUFTLENBQUMsY0FDUCxRQUFRLEVBQUUsYUFBYSxjQUN2QjtHQUFRLEVBQUUsNERBQTRELGNBQ3RFLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNLFVBQ2xELENBQUMsUUFDVyxtQkFBbUIsQ0FFL0I7Ozs7Ozs7Ozs7Ozs7O29CQUNEO0lBREEsMEJBQUM7Q0FBQSxBQUZELElBRUM7U0FGWSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqIEhvbGRzIGEgY29uc3VtZXIncyBBbmd1bGFyIHRlbXBsYXRlIGFuZCBkaXNwbGF5cyBpdCBvbiBhIFN3ZWV0IEFsZXJ0LlxuICogU2VlIFN3YWxQb3J0YWxEaXJlY3RpdmUgZm9yIGluZm8gYWJvdXQgdGhlIGNvdmVyZWQgZmVhdHVyZS5cbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdzd2FsLXBvcnRhbCcsXG4gICAgdGVtcGxhdGU6ICc8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwidGVtcGxhdGVcIj48L25nLWNvbnRhaW5lcj4nLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFN3YWxQb3J0YWxDb21wb25lbnQge1xuICAgIEBJbnB1dCgpIHB1YmxpYyB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PiB8IG51bGwgPSBudWxsO1xufVxuIl19