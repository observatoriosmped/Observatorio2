import { __decorate } from "tslib";
import { Component, Input } from '@angular/core';
import { FaIconComponent } from './icon.component';
import * as ɵngcc0 from '@angular/core';
let FaDuotoneIconComponent = class FaDuotoneIconComponent extends FaIconComponent {
    findIconDefinition(i) {
        const lookup = super.findIconDefinition(i);
        if (lookup != null && lookup.prefix !== 'fad') {
            throw new Error('The specified icon does not appear to be a Duotone icon. ' +
                'Check that you specified the correct style: ' +
                `<fa-duotone-icon [icon]="['fab', '${lookup.iconName}']"></fa-duotone-icon> ` +
                `or use: <fa-icon icon="${lookup.iconName}"></fa-icon> instead.`);
        }
        return lookup;
    }
    buildParams() {
        const params = super.buildParams();
        if (this.swapOpacity === true || this.swapOpacity === 'true') {
            params.classes.push('fa-swap-opacity');
        }
        if (this.primaryOpacity != null) {
            params.styles['--fa-primary-opacity'] = this.primaryOpacity.toString();
        }
        if (this.secondaryOpacity != null) {
            params.styles['--fa-secondary-opacity'] = this.secondaryOpacity.toString();
        }
        if (this.primaryColor != null) {
            params.styles['--fa-primary-color'] = this.primaryColor;
        }
        if (this.secondaryColor != null) {
            params.styles['--fa-secondary-color'] = this.secondaryColor;
        }
        return params;
    }
};
FaDuotoneIconComponent.ɵfac = function FaDuotoneIconComponent_Factory(t) { return ɵFaDuotoneIconComponent_BaseFactory(t || FaDuotoneIconComponent); };
FaDuotoneIconComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FaDuotoneIconComponent, selectors: [["fa-duotone-icon"]], inputs: { swapOpacity: "swapOpacity", primaryOpacity: "primaryOpacity", secondaryOpacity: "secondaryOpacity", primaryColor: "primaryColor", secondaryColor: "secondaryColor" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function FaDuotoneIconComponent_Template(rf, ctx) { }, encapsulation: 2 });
__decorate([
    Input()
], FaDuotoneIconComponent.prototype, "swapOpacity", void 0);
__decorate([
    Input()
], FaDuotoneIconComponent.prototype, "primaryOpacity", void 0);
__decorate([
    Input()
], FaDuotoneIconComponent.prototype, "secondaryOpacity", void 0);
__decorate([
    Input()
], FaDuotoneIconComponent.prototype, "primaryColor", void 0);
__decorate([
    Input()
], FaDuotoneIconComponent.prototype, "secondaryColor", void 0);
const ɵFaDuotoneIconComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FaDuotoneIconComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FaDuotoneIconComponent, [{
        type: Component,
        args: [{
                selector: 'fa-duotone-icon',
                template: ``
            }]
    }], null, { swapOpacity: [{
            type: Input
        }], primaryOpacity: [{
            type: Input
        }], secondaryOpacity: [{
            type: Input
        }], primaryColor: [{
            type: Input
        }], secondaryColor: [{
            type: Input
        }] }); })();
export { FaDuotoneIconComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHVvdG9uZS1pY29uLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsibmc6L0Bmb3J0YXdlc29tZS9hbmd1bGFyLWZvbnRhd2Vzb21lL2ljb24vZHVvdG9uZS1pY29uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQU1uRCxJQUFhLHNCQUFzQixHQUFuQyxNQUFhLHNCQUF1QixTQUFRLGVBQWU7SUEwQy9DLGtCQUFrQixDQUFDLENBQTRCO1FBQ3ZELE1BQU0sTUFBTSxHQUFHLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQyxJQUFJLE1BQU0sSUFBSSxJQUFJLElBQUksTUFBTSxDQUFDLE1BQU0sS0FBSyxLQUFLLEVBQUU7WUFDN0MsTUFBTSxJQUFJLEtBQUssQ0FDYiwyREFBMkQ7Z0JBQ3pELDhDQUE4QztnQkFDOUMscUNBQXFDLE1BQU0sQ0FBQyxRQUFRLHlCQUF5QjtnQkFDN0UsMEJBQTBCLE1BQU0sQ0FBQyxRQUFRLHVCQUF1QixDQUNuRSxDQUFDO1NBQ0g7UUFFRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBRVMsV0FBVztRQUNuQixNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUM7UUFFbkMsSUFBSSxJQUFJLENBQUMsV0FBVyxLQUFLLElBQUksSUFBSSxJQUFJLENBQUMsV0FBVyxLQUFLLE1BQU0sRUFBRTtZQUM1RCxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1NBQ3hDO1FBQ0QsSUFBSSxJQUFJLENBQUMsY0FBYyxJQUFJLElBQUksRUFBRTtZQUMvQixNQUFNLENBQUMsTUFBTSxDQUFDLHNCQUFzQixDQUFDLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUN4RTtRQUNELElBQUksSUFBSSxDQUFDLGdCQUFnQixJQUFJLElBQUksRUFBRTtZQUNqQyxNQUFNLENBQUMsTUFBTSxDQUFDLHdCQUF3QixDQUFDLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQzVFO1FBQ0QsSUFBSSxJQUFJLENBQUMsWUFBWSxJQUFJLElBQUksRUFBRTtZQUM3QixNQUFNLENBQUMsTUFBTSxDQUFDLG9CQUFvQixDQUFDLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztTQUN6RDtRQUNELElBQUksSUFBSSxDQUFDLGNBQWMsSUFBSSxJQUFJLEVBQUU7WUFDL0IsTUFBTSxDQUFDLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7U0FDN0Q7UUFFRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0NBQ0Y7O2djQUFBO0FBdEVVO0lBQVIsS0FBSyxFQUFFOzJEQUEwQztBQVF6QztJQUFSLEtBQUssRUFBRTs4REFBa0M7QUFRakM7SUFBUixLQUFLLEVBQUU7Z0VBQW9DO0FBUW5DO0lBQVIsS0FBSyxFQUFFOzREQUF1QjtBQVF0QjtJQUFSLEtBQUssRUFBRTs4REFBeUIsQ0FDbkM7QUF6Q2Esc0JBQXNCLG9CQUpsQyxTQUFTLENBQUMsVUFDVCxRQUFRLEVBQUUsaUJBQWlCO0NBQzNCLFFBQVEsRUFBRSxFQUFFLE1BQ2IsQ0FBQyxJQUNXLHNCQUFzQixDQThFbEM7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQ0Q7U0EvRWEsc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWNvbkRlZmluaXRpb24sIEljb25Qcm9wIH0gZnJvbSAnQGZvcnRhd2Vzb21lL2ZvbnRhd2Vzb21lLXN2Zy1jb3JlJztcbmltcG9ydCB7IEZhSWNvbkNvbXBvbmVudCB9IGZyb20gJy4vaWNvbi5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmYS1kdW90b25lLWljb24nLFxuICB0ZW1wbGF0ZTogYGAsXG59KVxuZXhwb3J0IGNsYXNzIEZhRHVvdG9uZUljb25Db21wb25lbnQgZXh0ZW5kcyBGYUljb25Db21wb25lbnQge1xuICAvKipcbiAgICogU3dhcCB0aGUgZGVmYXVsdCBvcGFjaXR5IG9mIGVhY2ggZHVvdG9uZSBpY29u4oCZcyBsYXllcnMuIFRoaXMgd2lsbCBtYWtlIGFuXG4gICAqIGljb27igJlzIHByaW1hcnkgbGF5ZXIgaGF2ZSB0aGUgZGVmYXVsdCBvcGFjaXR5IG9mIDQwJSByYXRoZXIgdGhhbiBpdHNcbiAgICogc2Vjb25kYXJ5IGxheWVyLlxuICAgKlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgQElucHV0KCkgc3dhcE9wYWNpdHk/OiAndHJ1ZScgfCAnZmFsc2UnIHwgYm9vbGVhbjtcblxuICAvKipcbiAgICogQ3VzdG9taXplIHRoZSBvcGFjaXR5IG9mIHRoZSBwcmltYXJ5IGljb24gbGF5ZXIuXG4gICAqIFZhbGlkIHZhbHVlcyBhcmUgaW4gcmFuZ2UgWzAsIDEuMF0uXG4gICAqXG4gICAqIEBkZWZhdWx0IDEuMFxuICAgKi9cbiAgQElucHV0KCkgcHJpbWFyeU9wYWNpdHk/OiBzdHJpbmcgfCBudW1iZXI7XG5cbiAgLyoqXG4gICAqIEN1c3RvbWl6ZSB0aGUgb3BhY2l0eSBvZiB0aGUgc2Vjb25kYXJ5IGljb24gbGF5ZXIuXG4gICAqIFZhbGlkIHZhbHVlcyBhcmUgaW4gcmFuZ2UgWzAsIDEuMF0uXG4gICAqXG4gICAqIEBkZWZhdWx0IDAuNFxuICAgKi9cbiAgQElucHV0KCkgc2Vjb25kYXJ5T3BhY2l0eT86IHN0cmluZyB8IG51bWJlcjtcblxuICAvKipcbiAgICogQ3VzdG9taXplIHRoZSBjb2xvciBvZiB0aGUgcHJpbWFyeSBpY29uIGxheWVyLlxuICAgKiBBY2NlcHRzIGFueSB2YWxpZCBDU1MgY29sb3IgdmFsdWUuXG4gICAqXG4gICAqIEBkZWZhdWx0IENTUyBpbmhlcml0ZWQgY29sb3JcbiAgICovXG4gIEBJbnB1dCgpIHByaW1hcnlDb2xvcj86IHN0cmluZztcblxuICAvKipcbiAgICogQ3VzdG9taXplIHRoZSBjb2xvciBvZiB0aGUgc2Vjb25kYXJ5IGljb24gbGF5ZXIuXG4gICAqIEFjY2VwdHMgYW55IHZhbGlkIENTUyBjb2xvciB2YWx1ZS5cbiAgICpcbiAgICogQGRlZmF1bHQgQ1NTIGluaGVyaXRlZCBjb2xvclxuICAgKi9cbiAgQElucHV0KCkgc2Vjb25kYXJ5Q29sb3I/OiBzdHJpbmc7XG5cbiAgcHJvdGVjdGVkIGZpbmRJY29uRGVmaW5pdGlvbihpOiBJY29uUHJvcCB8IEljb25EZWZpbml0aW9uKTogSWNvbkRlZmluaXRpb24gfCBudWxsIHtcbiAgICBjb25zdCBsb29rdXAgPSBzdXBlci5maW5kSWNvbkRlZmluaXRpb24oaSk7XG5cbiAgICBpZiAobG9va3VwICE9IG51bGwgJiYgbG9va3VwLnByZWZpeCAhPT0gJ2ZhZCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ1RoZSBzcGVjaWZpZWQgaWNvbiBkb2VzIG5vdCBhcHBlYXIgdG8gYmUgYSBEdW90b25lIGljb24uICcgK1xuICAgICAgICAgICdDaGVjayB0aGF0IHlvdSBzcGVjaWZpZWQgdGhlIGNvcnJlY3Qgc3R5bGU6ICcgK1xuICAgICAgICAgIGA8ZmEtZHVvdG9uZS1pY29uIFtpY29uXT1cIlsnZmFiJywgJyR7bG9va3VwLmljb25OYW1lfSddXCI+PC9mYS1kdW90b25lLWljb24+IGAgK1xuICAgICAgICAgIGBvciB1c2U6IDxmYS1pY29uIGljb249XCIke2xvb2t1cC5pY29uTmFtZX1cIj48L2ZhLWljb24+IGluc3RlYWQuYCxcbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGxvb2t1cDtcbiAgfVxuXG4gIHByb3RlY3RlZCBidWlsZFBhcmFtcygpIHtcbiAgICBjb25zdCBwYXJhbXMgPSBzdXBlci5idWlsZFBhcmFtcygpO1xuXG4gICAgaWYgKHRoaXMuc3dhcE9wYWNpdHkgPT09IHRydWUgfHwgdGhpcy5zd2FwT3BhY2l0eSA9PT0gJ3RydWUnKSB7XG4gICAgICBwYXJhbXMuY2xhc3Nlcy5wdXNoKCdmYS1zd2FwLW9wYWNpdHknKTtcbiAgICB9XG4gICAgaWYgKHRoaXMucHJpbWFyeU9wYWNpdHkgIT0gbnVsbCkge1xuICAgICAgcGFyYW1zLnN0eWxlc1snLS1mYS1wcmltYXJ5LW9wYWNpdHknXSA9IHRoaXMucHJpbWFyeU9wYWNpdHkudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuc2Vjb25kYXJ5T3BhY2l0eSAhPSBudWxsKSB7XG4gICAgICBwYXJhbXMuc3R5bGVzWyctLWZhLXNlY29uZGFyeS1vcGFjaXR5J10gPSB0aGlzLnNlY29uZGFyeU9wYWNpdHkudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgaWYgKHRoaXMucHJpbWFyeUNvbG9yICE9IG51bGwpIHtcbiAgICAgIHBhcmFtcy5zdHlsZXNbJy0tZmEtcHJpbWFyeS1jb2xvciddID0gdGhpcy5wcmltYXJ5Q29sb3I7XG4gICAgfVxuICAgIGlmICh0aGlzLnNlY29uZGFyeUNvbG9yICE9IG51bGwpIHtcbiAgICAgIHBhcmFtcy5zdHlsZXNbJy0tZmEtc2Vjb25kYXJ5LWNvbG9yJ10gPSB0aGlzLnNlY29uZGFyeUNvbG9yO1xuICAgIH1cblxuICAgIHJldHVybiBwYXJhbXM7XG4gIH1cbn1cbiJdfQ==